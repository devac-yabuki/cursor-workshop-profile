---
description: 共通パーツ（再利用コンポーネント）に margin/width/height を指定しないためのガイドと検出ルール
globs: *.css, *.scss, *.sass
alwaysApply: false
---

# 共通パーツには margin や width/height を指定しない

## 方針
サイト全体で使い回すパーツ（ボタン、カード、ラベル等）のスタイルは「見た目（色・タイポ・内部余白など）に限定」し、レイアウトに関わる余白や大きさ（`margin`、`width`、`height`）はパーツ外（呼び出し側の親要素）で制御します。

理由:
- 使い回す場所ごとに前後余白や横幅が異なるため、パーツ内で固定すると再利用性が下がる
- 親コンテナの責務（レイアウト管理）と子コンポーネントの責務（見た目定義）を分離すると保守性が上がる

## 検出基準（正規表現例）
次のいずれかに一致した場合、共通パーツ内でレイアウト系プロパティ（`margin`/`width`/`height`）を設定している可能性があります。

前提/意図:
- 対象は「単一クラスのブロック/モディファイア（BEM）」のルール本体
- 子要素（`__`）やユーティリティ/状態クラス（`u-`, `util-`, `is-`, `has-`, `l-`）は除外

正規表現例（CSS/SCSS。改行・複数行対応のフラグを使用してください）:

```
^\s*\.(?![^\{]*__)(?!u-|util-|is-|has-|l-)[a-z0-9][a-z0-9\-]*(?:--[a-z0-9\-]+)?\s*\{[\s\S]*?\b(?:margin(?:-(?:top|right|bottom|left))?|width|height)\s*:
```

補足:
- 上記は `.button { ... }` や `.button--primary { ... }` など、文脈に依存しない単一クラスセレクタ内で `margin/width/height` を検出します。
- `.button__icon { width: 16px; }` のような子要素は対象外です（内部要素の寸法は例外を許容、下記参照）。

## 改善メッセージ（不足時のガイダンス）
共通パーツには `margin`/`width`/`height` を指定せず、呼び出し側（親コンテナ）でレイアウトを制御してください。

## 悪い例（Bad）
```html
<!-- コンポーネント自身に余白/サイズを持たせてしまっている -->
<button class="button">送信</button>
```

```css
.button {
  font-size: 20px;
  background: red;
  margin: 20px auto; /* NG: 余白は親で管理 */
  width: 300px;      /* NG: 横幅は親で管理 */
}
```

## 良い例（Good）
```html
<div class="search-button">
  <button class="button">送信</button>
  <!-- 必要なら他の要素もここに配置 -->
  <!-- 親コンテナがレイアウト（余白/幅）を担う -->
  <!-- 子の .button は見た目（色・文字サイズなど）に限定 -->
  
</div>
```

```css
.button {
  font-size: 20px;
  background: red;
}
.search-button {
  margin: 20px auto; /* OK: 呼び出し側が余白を管理 */
  width: 300px;      /* OK: 呼び出し側がサイズを管理 */
}
```

## 例外（許容ケース）
- 内部要素の表示に必要な最小限の寸法（例: アイコン画像の `width/height`、アバターの固定サイズ）は `.block__element` 側で指定可
- コンポーネント内部の間隔（`padding`）は、見た目としての内側余白のため指定可（ただし外側余白は親）

## レビュー/導入チェックリスト
- [ ] 共通パーツ（ブロック/モディファイア）内に `margin` を書いていない
- [ ] 共通パーツ（ブロック/モディファイア）内に `width`/`height` を書いていない
- [ ] 余白やサイズは親ラッパーやユーティリティクラスで制御している
- [ ] 内部要素（`__element`）の最小限の寸法だけをコンポーネント内で指定している

## 関連
- 命名の指針は [`html-class-naming.mdc`](mdc:.cursor/rules/html-class-naming.mdc) を参照

